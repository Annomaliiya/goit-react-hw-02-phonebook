{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","App.module.css","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","ContactForm","addContact","nameInputId","name","number","handleChange","numberInputId","onSubmit","label","htmlFor","input","type","value","onChange","id","pattern","required","btnAdd","ContactList","renderContacts","contactsList","Filter","filter","filterInputId","App","state","contacts","nanoid","event","preventDefault","setState","prevState","newContact","currentTarget","deleteContact","contactId","contact","getFiltered","normalizeFilter","toLowerCase","includes","this","map","contactsListItem","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc2376c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1Rvk-\",\"input\":\"ContactForm_input__AiE9u\",\"btnAdd\":\"ContactForm_btnAdd__3YjXd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3XBeH\",\"title\":\"Section_title__e1mfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3GsFR\",\"label\":\"Filter_label__3bB3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2SGcS\",\"contactsListItem\":\"App_contactsListItem__3IHqL\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children}) => {\r\n    return (<section className={styles.section}><h1 className={styles.title}>{title}</h1>\r\n    {children}</section>\r\n    )\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node\r\n}","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\"\r\n\r\nconst ContactForm = ({ addContact, nameInputId, name, number, handleChange, numberInputId }) => {\r\n    return (\r\n        <form onSubmit={addContact}>\r\n            <label className={styles.label} htmlFor={nameInputId}>Name\r\n                <input className={styles.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleChange}\r\n                    id={nameInputId}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    required\r\n                /></label>\r\n            <label className={styles.label} htmlFor={numberInputId}>Number\r\n                <input className={styles.input}\r\n                    type=\"tel\"\r\n                    value={number}\r\n                    onChange={handleChange}\r\n                    id={numberInputId}\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    required\r\n                /></label>\r\n            <button className={styles.btnAdd} type=\"submit\">Add contact</button>\r\n        </form>)\r\n};\r\n\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    addContact: PropTypes.func.isRequired,\r\n    nameInputId: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    numberInputId: PropTypes.string.isRequired\r\n}","\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ nameInputId, numberInputId,  renderContacts  }) => {\r\n    return ( \r\n        <ul className={styles.contactsList}>\r\n            {renderContacts }</ul>)\r\n}\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({nameInputId, filter, handleChange,filterInputId, }) => {\r\n    return (\r\n        <>\r\n            <label className={styles.label} htmlFor={nameInputId}>Find contacts by name\r\n            <input className={styles.input}\r\n              type=\"text\"\r\n              name=\"filter\"\r\n              value={filter}\r\n              onChange={handleChange}\r\n              id={filterInputId}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            /></label>\r\n            </>\r\n    )\r\n}\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  nameInputId: PropTypes.string.isRequired,\r\n  filterInputId: PropTypes.string.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  handleChange:PropTypes.func.isRequired\r\n}","import propTypes from 'prop-types';\nimport { nanoid } from 'nanoid'\nimport { Component } from 'react/cjs/react.production.min';\n\n\nimport Section from './components/Section';\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\"\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: ''\n  };\n\n  nameInputId = nanoid();\n  filterInputId = nanoid();\n  numberInputId = nanoid();\n\n\n  addContact = (event) => {\n    event.preventDefault();\n    this.setState(prevState => {\n      const newContact = {\n        id: nanoid(),\n        name: this.state.name,\n        number: this.state.number\n      };\n      this.setState({ name: \"\", number: \"\" });\n      return {\n        contacts: [...prevState.contacts, newContact],\n      }\n    })\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  getFiltered = () => {\n    const { contacts, filter } = this.state;\n    if (!filter) {\n      return contacts;\n    }\n    const normalizeFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(({ name }) => {\n      const normalizeName = name.toLowerCase();\n      const result = normalizeName.includes(normalizeFilter);\n      return result;\n    })\n\n    return filteredContacts;\n  }\n\n  render() {\n    const { getFiltered } = this;\n    const contacts = getFiltered();\n    const renderContacts = contacts.map((contact) => (<li className={styles.contactsListItem}>{contact.name} {contact.number}</li>))\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm addContact={this.addContact} nameInputId={this.nameInputId} name={this.state.name} number={this.state.number} handleChange={this.handleChange} numberInputId={this.nameInputId} />\n        </Section>\n        <Section title='Contacts'>\n          <Filter nameInputId={this.nameInputId} filter={this.state.filter} handleChange={this.handleChange} filterInputId={this.filterInputId} />\n          <ContactList renderContacts={renderContacts} nameInputId={this.nameInputId} numberInputId={this.numberInputId}\n          />\n\n        </Section>\n      </>\n    )\n  };\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}